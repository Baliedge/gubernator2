# Optional workflow for Go Static Code Analysis check,
# copy this file to yours <repo>/.github/workflows folder only if you need this.
# See https://mailgun.atlassian.net/wiki/spaces/ENG/pages/4278943767/Go+Static+Code+Analysis+Linters

name: Lint

on:
  push:
    branches:
      - main
      - master
  pull_request:

env:
  SSH_AUTH_SOCK: /tmp/ssh_agent.sock
  GOLANGCI_LINT_VERSION: v1.54.2

jobs:
  lint:
    name: lint
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version-file: ./go.mod
          cache: true # caching and restoring go modules and build outputs

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "${{ secrets.CI_SSH_KEY }}"
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Configure git for private modules
        run: |
          git config --global url.ssh://git@github.com/.insteadOf https://github.com/
          go env -w GOPRIVATE=github.com/mailgun

      - name: Check that 'go mod tidy' was called before commit
        run: go mod tidy && git diff --exit-code

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
          skip-cache: true # cache/restore is done by actions/setup-go@v3 step
          args: -v
